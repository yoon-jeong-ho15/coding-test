// =================================================================
// 문제 1: 최대공약수 구하기 (유클리드 호제법)
// =================================================================
/*
문제 설명:
두 정수 a와 b의 최대공약수(GCD)를 재귀적으로 구하는 함수를 작성하세요.
유클리드 호제법의 원리는 다음과 같습니다.
1. a를 b로 나눈 나머지를 r이라고 합니다.
2. 만약 r이 0이라면, b가 최대공약수입니다.
3. 만약 r이 0이 아니라면, a에 b를, b에 r을 대입하여 1번 과정을 반복합니다.
재귀 함수는 이 과정을 자연스럽게 표현할 수 있습니다.

입출력 예시:
- 입력: a = 48, b = 18
- 출력: 6

- 입력: a = 9, b = 28
- 출력: 1
*/
function solution1(a, b) {
  // 여기에 코드를 작성하세요.
  let answer = 0;
  function gcd(a,b){
    let r = a % b;
    if(r==0){
      return b;
    }
    return gcd(b,r);
  }
  answer = gcd(a,b);
  return answer;
}

// console.log("최대공약수 (48, 18):", solution1(48, 18));
// console.log("최대공약수 (9, 28):", solution1(9, 28));


// =================================================================
// 문제 2: 문자열 뒤집기
// =================================================================
/*
문제 설명:
주어진 문자열을 재귀적으로 뒤집는 함수를 작성하세요.
힌트:
- 빈 문자열이나 길이가 1인 문자열은 그대로 반환합니다. (기본 조건)
- 문자열의 첫 글자와 나머지 부분으로 나눌 수 있습니다.
- `str.substring(1)` 와 `str.charAt(0)` 를 활용해 보세요.

입출력 예시:
- 입력: "hello"
- 출력: "olleh"

- 입력: "world"
- 출력: "dlrow"
*/
function solution2(str) {
  // 여기에 코드를 작성하세요.
  let answer = "";
  function back(n){
    if(n<0){
      return;
    }
    answer += str[n];
    back(n-1);
  }
  back(str.length-1);

  return answer;
}

// console.log("문자열 뒤집기 ('hello'):", solution2("hello"));
// console.log("문자열 뒤집기 ('world'):", solution2("world"));


// =================================================================
// 문제 3: 각 자릿수의 합 구하기
// =================================================================
/*
문제 설명:
음이 아닌 정수 num의 각 자릿수의 합을 재귀적으로 구하는 함수를 작성하세요.
힌트:
- 숫자를 10으로 나눈 나머지는 마지막 자릿수와 같습니다.
- 숫자를 10으로 나눈 몫은 마지막 자릿수를 제외한 나머지 숫자들과 같습니다.
- `num % 10` 과 `Math.floor(num / 10)` 를 활용해 보세요.

입출력 예시:
- 입력: 12345
- 출력: 15 (1 + 2 + 3 + 4 + 5)

- 입력: 987
- 출력: 24 (9 + 8 + 7)

*/
function solution3(num) {
  // 여기에 코드를 작성하세요.
  num += "";
  function back(n){
    if(n<0){
      return 0;
    }

    return Number(num[n])+back(n-1);
  }

  let answer = back(num.length-1);

  return answer;
}

// console.log("자릿수 합 (12345):", solution3(12345));
// console.log("자릿수 합 (987):", solution3(987));
